import{_ as i,o as s,c as e,e as a}from"./app-lWOLLswQ.js";const t="/dadagarden.github.io/assets/1-DbxGefO4.png",l={},n=a(`<h2 id="_1-系统环境需求" tabindex="-1"><a class="header-anchor" href="#_1-系统环境需求"><span>1. 系统环境需求</span></a></h2><ol><li>安装Anaconda，添加到环境变量</li><li>安装Python</li><li>安装Torch</li><li>如果使用N卡，请安装好CUDA Toolkit和cuDNN</li></ol><p>检查系统环境：</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">conda</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">python</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">nvcc</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Python下检查系统环境：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> torch</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(torch.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">__version__</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(torch.version.cuda)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果使用N卡，确定适合自己版本的CUDA，使用以下命令检查合适版本：</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">nvidia</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">smi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>CUDA及Torch配置请参考以下教程： <a href="https://blog.csdn.net/qq_56079620/article/details/139363718" target="_blank" rel="noopener noreferrer">CUDA配置及Pytorch-gpu安装教程_cuda12.5对应的pytorch版本-CSDN博客</a></p><p>检查cuda在当前python环境下是否可用，true代表可用，如果为false请检查安装的版本是否与显卡对应且支持。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>import torch</span></span>
<span class="line"><span>torch.cuda.is_available()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>我的系统环境如下：</p><ul><li>conda 24.7.1</li><li>Python 3.12.4</li><li>torch：2.5.1+cu124</li><li>cuda：12.4</li></ul></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>cmd中运行<code>pip list</code>检查troch、torchaudio、torchvision的版本是否一致 <img src="`+t+`" alt="检查torch、torchaudio、torchvision的版本" loading="lazy"> 如果不一致可以单独卸载其中一个，重新运行安装命令，例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>以上命令可以在<a href="https://pytorch.org/" target="_blank" rel="noopener noreferrer">PyTorch</a>官网找到所需要的对应版本。</p></div><h2 id="_2-安装yolov8环境" tabindex="-1"><a class="header-anchor" href="#_2-安装yolov8环境"><span>2. 安装YOLOV8环境</span></a></h2><ol><li>安装YOLOV8</li></ol><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">pip install </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ultralytics</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">upgrade</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> https://pypi.tuna.tsinghua.edu.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">cn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">simple</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>验证安装</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ultralytics</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ultralytics.</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">checks</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>安装第三方工具包</li></ol><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">pip install numpy </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">opencv</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">python</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> pillow pandas </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">matplotlib</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> seaborn tqdm wandb seedir </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">emoji</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> https://pypi.tuna.tsinghua.edu.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">cn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">simple</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-官方预训练模型" tabindex="-1"><a class="header-anchor" href="#_3-官方预训练模型"><span>3. 官方预训练模型</span></a></h2><ul><li>官方github仓库：<a href="https://github.com/ultralytics/ultralytics" target="_blank" rel="noopener noreferrer">ultralytics/ultralytics: Ultralytics YOLO11 🚀</a></li></ul><h3 id="_1-命令行使用-以11x模型为例" tabindex="-1"><a class="header-anchor" href="#_1-命令行使用-以11x模型为例"><span>（1）命令行使用，以11x模型为例：</span></a></h3><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">yolo pose predict </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">model</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">yolo11x</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">pose.pt </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">source</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/run.jpg </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">device</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>yolo</code>：这是命令的前缀，表示正在使用YOLO系列工具。</li><li><code>pose</code>：这指定了要执行的任务类型，即姿态估计。</li><li><code>predict</code>：这是命令的动作，表示要使用模型进行预测。</li><li><code>model=yolo11x-pose.pt</code>：这个参数指定了用于预测的模型文件。在这里，<code>yolo11x-pose.pt</code> 是模型文件的名称，它应该是已经训练好的YOLOv11姿态估计模型。</li><li><code>source=image/run.jpg</code>：这个参数指定了输入源。在这个例子中，<code>image/run.jpg</code> 是要进行分析的图片文件。YOLOv11也可以处理视频文件或摄像头输入，例如设置为<code>0</code>，表示调用设备已有摄像头输入。</li><li><code>device=0</code>：这个参数指定了用于执行预测的设备。在这里，<code>0</code> 通常表示使用第一个可用的GPU。如果设置为 <code>cpu</code>，则表示使用CPU。如果系统中有多个GPU，可以通过更改数字来指定其他GPU。</li></ul>`,25),h=[n];function r(d,p){return s(),e("div",null,h)}const c=i(l,[["render",r],["__file","YOLO11学习和使用.html.vue"]]),k=JSON.parse('{"path":"/quick-learn/YOLO11%E5%AD%A6%E4%B9%A0%E5%92%8C%E4%BD%BF%E7%94%A8.html","title":"YOLO11学习和使用","lang":"zh-CN","frontmatter":{"title":"YOLO11学习和使用","icon":"code","date":"2025-01-12T00:00:00.000Z","category":"知识快学","tags":["视频行为分析","YOLO"],"cover":"/assets/images/视频分析.jpg","excerpt":"根据近期的项目需求，跑来学习一下YOLO，同时复习一下Python，YOLO是一种物体检测和图像分割模型，官方提供了已经训练好的多个版本进行使用，可以根据自己的需求进行微调或者训练自己的模型。","order":"10","description":"1. 系统环境需求 安装Anaconda，添加到环境变量 安装Python 安装Torch 如果使用N卡，请安装好CUDA Toolkit和cuDNN 检查系统环境： Python下检查系统环境： 如果使用N卡，确定适合自己版本的CUDA，使用以下命令检查合适版本： CUDA及Torch配置请参考以下教程： CUDA配置及Pytorch-gpu安装教程...","head":[["meta",{"property":"og:url","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/quick-learn/YOLO11%E5%AD%A6%E4%B9%A0%E5%92%8C%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"哒哒的花园"}],["meta",{"property":"og:title","content":"YOLO11学习和使用"}],["meta",{"property":"og:description","content":"1. 系统环境需求 安装Anaconda，添加到环境变量 安装Python 安装Torch 如果使用N卡，请安装好CUDA Toolkit和cuDNN 检查系统环境： Python下检查系统环境： 如果使用N卡，确定适合自己版本的CUDA，使用以下命令检查合适版本： CUDA及Torch配置请参考以下教程： CUDA配置及Pytorch-gpu安装教程..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/视频分析.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-12T11:16:20.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/视频分析.jpg"}],["meta",{"name":"twitter:image:alt","content":"YOLO11学习和使用"}],["meta",{"property":"article:author","content":"哒哒溜"}],["meta",{"property":"article:tag","content":"视频行为分析"}],["meta",{"property":"article:tag","content":"YOLO"}],["meta",{"property":"article:published_time","content":"2025-01-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-12T11:16:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"YOLO11学习和使用\\",\\"image\\":[\\"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/视频分析.jpg\\"],\\"datePublished\\":\\"2025-01-12T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-12T11:16:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哒哒溜\\",\\"url\\":\\"https://github.com/matike16\\"}]}"]]},"headers":[{"level":2,"title":"1. 系统环境需求","slug":"_1-系统环境需求","link":"#_1-系统环境需求","children":[]},{"level":2,"title":"2. 安装YOLOV8环境","slug":"_2-安装yolov8环境","link":"#_2-安装yolov8环境","children":[]},{"level":2,"title":"3. 官方预训练模型","slug":"_3-官方预训练模型","link":"#_3-官方预训练模型","children":[{"level":3,"title":"（1）命令行使用，以11x模型为例：","slug":"_1-命令行使用-以11x模型为例","link":"#_1-命令行使用-以11x模型为例","children":[]}]}],"git":{"createdTime":1736680580000,"updatedTime":1736680580000,"contributors":[{"name":"matike16","email":"lda240820@gmail.com","commits":1}]},"readingTime":{"minutes":2.45,"words":735},"filePathRelative":"quick-learn/YOLO11学习和使用.md","localizedDate":"2025年1月12日","autoDesc":true}');export{c as comp,k as data};
