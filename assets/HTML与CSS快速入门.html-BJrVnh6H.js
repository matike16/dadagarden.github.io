import{_ as e,r as l,o as t,c as a,b as n,a as i,e as d}from"./app-DMBueewi.js";const h={},p=i("div",{class:"hint-container important"},[i("p",{class:"hint-container-title"},"重要"),i("p",null,"本篇文章总结于B站黑马课程”Javaweb企业开发全流程“，用于个人知识点归纳。")],-1),r=i("h2",{id:"参考资料",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#参考资料"},[i("span",null,"参考资料")])],-1),c=d(`<h2 id="什么是html、css" tabindex="-1"><a class="header-anchor" href="#什么是html、css"><span>什么是HTML、CSS？</span></a></h2><h3 id="html" tabindex="-1"><a class="header-anchor" href="#html"><span>HTML</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>HTML(HyperText Markup Language)：超文本标记语言。</p></div><ul><li><p>超文本：超越了文本的限制，比普通文本更强大。除了文字信息，还可以定义图片、音频、视频等内容。</p></li><li><p>标记语言：由标签构成的语言</p><ul><li><p>HTML标签都是预定义好的。例如：使用<code>&lt;a&gt;</code>展示超链接，使用<img><code>&lt;img&gt;</code>展示图片，<code>&lt;video&gt;</code>展示视频。</p></li><li><p>HTML代码直接在浏览器中运行，HTML标签由浏览器解析。</p></li></ul></li></ul><h3 id="css" tabindex="-1"><a class="header-anchor" href="#css"><span>CSS</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>CSS(Cascading Style Sheet)：层叠样式表，用于控制页面的样式（表现）。</p></div><ul><li><p>它可以改变HTML中定义的各种元素的样式，如字体大小、颜色、布局等。</p></li><li><p>虽然HTML提供基本结构信息，但CSS的作用在于增强并个性化网页的设计效果。</p></li><li><p>在实际应用中，通常HTML处理网页内容逻辑，而CSS则负责美化展现。</p></li></ul><hr><h2 id="html快速入门" tabindex="-1"><a class="header-anchor" href="#html快速入门"><span>HTML快速入门</span></a></h2><ol><li>新建文本文件，后缀名改为<code>.html</code></li><li>编写HTML结构标签</li><li>在<code>&lt;body&gt;</code>中填写内容</li></ol><div class="language-hello.html line-numbers-mode" data-highlighter="shiki" data-ext="hello.html" data-title="hello.html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>&lt;html&gt;</span></span>
<span class="line"><span>	&lt;head&gt;</span></span>
<span class="line"><span>		HTML快速入门</span></span>
<span class="line"><span>	&lt;/head&gt;</span></span>
<span class="line"><span>	&lt;body&gt;</span></span>
<span class="line"><span>		&lt;h1&gt;Hello HTML!&lt;/h1&gt;</span></span>
<span class="line"><span>		&lt;img src=&quot;1.jgp&quot; /&gt;</span></span>
<span class="line"><span>	&lt;/body&gt;</span></span>
<span class="line"><span>&lt;/html&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-基本标签" tabindex="-1"><a class="header-anchor" href="#_1-基本标签"><span>1. 基本标签</span></a></h3><ul><li><p><strong>段落</strong>：<code>&lt;p&gt;...&lt;/p&gt;</code>，表示一个段落。</p></li><li><p><strong>链接</strong>：<code>&lt;a href=&quot;url&quot;&gt;...&lt;/a&gt;</code>，创建一个超链接。</p></li><li><p><strong>图片</strong>：<code>&lt;img src=&quot;image_url&quot; alt=&quot;image_description&quot;&gt;</code>，插入图片。</p></li><li><p><strong>列表</strong>：</p><ul><li>无序列表：<code>&lt;ul&gt;</code> 和 <code>&lt;li&gt;</code>，表示项目列表。</li><li>有序列表：<code>&lt;ol&gt;</code> 和 <code>&lt;li&gt;</code>，表示有序的项目列表。</li></ul></li><li><p><strong>表格</strong>：</p><ul><li><code>&lt;table&gt;</code>：定义表格。</li><li><code>&lt;thead&gt;</code>：定义表格的头部。</li><li><code>&lt;tbody&gt;</code>：定义表格的主体。</li><li><code>&lt;tr&gt;</code>：定义表格的行。</li><li><code>&lt;th&gt;</code>：定义表格的表头单元格。</li><li><code>&lt;td&gt;</code>：定义表格的数据单元格。</li></ul></li></ul><h3 id="_2-结构标签" tabindex="-1"><a class="header-anchor" href="#_2-结构标签"><span>2. 结构标签</span></a></h3><ul><li><p>又称为（语义化标签）</p></li><li><p>HTML5引入了更多语义化标签，如<code>&lt;header&gt;</code>, <code>&lt;footer&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code>等，这些标签有助于搜索引擎优化（SEO）和更好的内容结构。</p></li></ul><h3 id="_3-布局标签" tabindex="-1"><a class="header-anchor" href="#_3-布局标签"><span>3. 布局标签</span></a></h3><ul><li><p>布局标签：实际开发网页中，会大量频繁的使用 div 和 span 这两个没有语义的布局标签。</p></li><li><p>div标签：</p><ul><li>一行只显示一个（独占一行）</li><li>宽度默认是父元素的宽度，高度默认由内容撑开</li><li>可以设置宽高（width、height）</li></ul></li><li><p>span标签：</p><ul><li>一行可以显示多个</li><li>宽度和高度默认由内容撑开</li><li>不可以设置宽高（width、height）</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>盒子模型</p><ul><li><p>盒子：页面中所有的元素（标签），都可以看做是一个盒子，由盒子将页面中的元素包含在一个 矩形区域内，通过盒子的视角更方便的进行页面布局。</p></li><li><p>盒子模型组成：内容区域（content）、内边距区域（padding）、边框区域（border）、外边距区域（margin）。</p></li><li><p>盒子的大小，其实就包括三个部分： border、padding、content，而margin外边距是不包括在盒 子之内的。</p></li></ul></div><h3 id="_4-表单标签" tabindex="-1"><a class="header-anchor" href="#_4-表单标签"><span>4. 表单标签</span></a></h3><blockquote><p>经常在访问网站时，出现的登录页面、注册页面、个人信息提交页面，其实都是一个一个的表单</p></blockquote><ul><li><p>表单场景: 表单就是在网页中负责数据采集功能的，如：注册、登录的表单</p></li><li><p>表单标签：<code>&lt;form&gt;</code></p></li><li><p>表单属性：</p><ul><li><p>action: 规定表单提交时，向何处发送表单数据，表单提交的URL。</p></li><li><p>method: 规定用于发送表单数据的方式，常见为： GET、POST。</p><ul><li><p>GET：表单数据是拼接在url后面的， 如： xxxxxxxxxxx? username=Tom&amp;age=12，url中能携带的表单数据大小是有限制的。</p></li><li><p>POST： 表单数据是在请求体（消息体）中携带的，大小没有限制。</p></li></ul></li></ul></li><li><p>表单项标签: 不同类型的input元素、下拉列表、文本域等。</p><ul><li><p>input: 定义表单项，通过type属性控制输入形式</p></li><li><p>select: 定义下拉列表</p></li><li><p>textarea: 定义文本域</p></li></ul></li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>表单中的所有表单项，要想能够正常的采集数据，在提交的时候能提交到服务端，表单项必须指定name属性。 否则，无法提交该表单项。</p></div><h3 id="_5-特点" tabindex="-1"><a class="header-anchor" href="#_5-特点"><span>5. 特点</span></a></h3><ol><li><p><strong>不区分大小写</strong>：标签名称在整个代码中不区分大小写，但出于编程规范和可读性的考虑，通常采用小写形式。</p></li><li><p><strong>属性值引用</strong>：在引用标签属性值时，允许使用双引号或单引号。例如，在之前提到的<code>&lt;img&gt;</code>标签中。</p></li><li><p><strong>语法松散性</strong>：尽管HTML语法较为松散，允许删除部分标签或遗漏括号，但在实际编写过程中应保持一定的严谨性，以确保代码的完整性和易维护性。</p></li></ol><hr><h2 id="绝对路径与相对路径" tabindex="-1"><a class="header-anchor" href="#绝对路径与相对路径"><span>绝对路径与相对路径</span></a></h2><h3 id="_1-绝对路径的定义与使用" tabindex="-1"><a class="header-anchor" href="#_1-绝对路径的定义与使用"><span>1. 绝对路径的定义与使用</span></a></h3><ul><li><p>绝对路径提供从根目录至目标资源的完整路径，包括文件名。</p></li><li><p>本地磁盘路径指明物理位置；网络路径给出URL地址。</p></li><li><p>使用绝对路径引用资源需根据资源类型，如本地文件或网络资源。</p></li></ul><h3 id="_2-相对路径的定义及应用" tabindex="-1"><a class="header-anchor" href="#_2-相对路径的定义及应用"><span>2. 相对路径的定义及应用</span></a></h3><ul><li><p>相对路径基于当前HTML文档位置，使用 <code>.</code>（当前目录）和 <code>..</code>（上一级目录）。</p></li><li><p>编写HTML代码时可以省略层级，如 <code>./images/logo.png</code>。</p></li></ul><hr><h2 id="css快速入门" tabindex="-1"><a class="header-anchor" href="#css快速入门"><span>CSS快速入门</span></a></h2><h3 id="_1-css引入方式" tabindex="-1"><a class="header-anchor" href="#_1-css引入方式"><span>1. CSS引入方式</span></a></h3><p>具体有3种引入方式，语法如下表格所示：</p><table><thead><tr><th>名称</th><th>语法描述</th><th>示例</th></tr></thead><tbody><tr><td>行内 样式</td><td>在标签内使用style属性，属性值是 css属性键值对</td><td><code>&lt;h1 style=&quot;xxx:xxx&quot;&gt;标题1&lt;/h1&gt;</code></td></tr><tr><td>内嵌 样式</td><td>定义<code>&lt;style&gt;</code>标签，在标签内部定义 css样式</td><td><code>&lt;style&gt; h1 {...} &lt;/style&gt;</code></td></tr><tr><td>外联 样式</td><td>定义<code>&lt;link&gt;</code>标签，通过href属性引入 外部css文件</td><td><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;css/news.css&quot;&gt;</code></td></tr></tbody></table><p>企业开发的CSS引入方式使用情况</p><ol><li><p>内联样式</p><ul><li>内联样式会导致代码冗余，增加后期维护的难度。</li><li>因此，这种方式不常被使用。</li></ul></li><li><p>内部样式</p><ul><li>通过定义CSS选择器，使样式仅作用于当前页面的特定标签。</li><li>这种方式在企业开发中较为常见。</li></ul></li><li><p>外部样式</p><ul><li>实现HTML和CSS的完全分离。</li><li>这是企业开发中常用的方式。</li></ul></li></ol><h3 id="_2-颜色表示" tabindex="-1"><a class="header-anchor" href="#_2-颜色表示"><span>2. 颜色表示</span></a></h3><p>在前端程序开发中，颜色的表示方式常见的有如下三种：</p><table><thead><tr><th>表示方式</th><th>表示含义</th><th>取值</th></tr></thead><tbody><tr><td>关键字</td><td>预定义的颜色名</td><td>red、green、blue...</td></tr><tr><td>rgb表示法</td><td>红绿蓝三原色，每项取值范 围：0-255</td><td>rgb(0,0,0)、rgb(255,255,255)、 rgb(255,0,0)</td></tr><tr><td>十六进制表示法</td><td><code>#</code>开头，将数字转换成十六进制表示</td><td><code>#000000</code>、<code>#ff0000</code>、<code>#cccccc</code>，简写： <code>#000</code>、<code>#ccc</code></td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>对于颜色的提取，个人使用的是uTools工具里面的拾色器。</p></div><h3 id="_3-css选择器" tabindex="-1"><a class="header-anchor" href="#_3-css选择器"><span>3. CSS选择器</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>顾名思义：选择器是选取需设置样式的元素（标签），但是我们根据业务场景不同，选择的标签的需求也是多种多样的，所以选择器有很多种，此处讲解最基本的3种。</p></div><h4 id="_1-元素选择器" tabindex="-1"><a class="header-anchor" href="#_1-元素选择器"><span>(1) 元素选择器</span></a></h4><p>元素选择器是通过元素的标签名来选择页面上的元素。它适用于对所有具有相同标签的元素应用样式。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#C678DD;">元素名</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  属性: 值;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-id选择器" tabindex="-1"><a class="header-anchor" href="#_2-id选择器"><span>(2) ID选择器</span></a></h4><p>ID选择器使用元素的<code>id</code>属性来选择页面上的特定元素。每个<code>id</code>在页面中应该是唯一的，因此ID选择器用于指定唯一的样式。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">#id名</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  属性: 值;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">#main-content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> #ccc</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-类选择器" tabindex="-1"><a class="header-anchor" href="#_3-类选择器"><span>(3) 类选择器</span></a></h4><p>类选择器使用元素的<code>class</code>属性来选择元素。类名可以被多个元素共享，因此类选择器非常适合定义可重用的样式。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;">.类名</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  属性: 值;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例 ：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;">.error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">  font-style</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">italic</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>CSS中，当元素选择器、类选择器和ID选择器同时作用于同一元素时，它们的优先级从高到低依次是ID选择器、类选择器、元素选择器。</p></div>`,59);function o(g,k){const s=l("NavCard");return t(),a("div",null,[p,r,n(s,{arr:`[
    {"title": "菜鸟教程", "url": "https://www.runoob.com/", "desc": "菜鸟在线教程", "icon": "/navicon/runoob.ico"},
    {"title": "W3C", "url": "https://www.w3cschool.cn/tutorial", "desc": "w3c在线基础教程", "icon": "/navicon/w3c.ico"}
]`}),c])}const m=e(h,[["render",o],["__file","HTML与CSS快速入门.html.vue"]]),b=JSON.parse('{"path":"/technology/frontend-dev/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF/HTML%E4%B8%8ECSS%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html","title":"HTML与CSS快速入门","lang":"zh-CN","frontmatter":{"title":"HTML与CSS快速入门","date":"2024-07-29T00:00:00.000Z","category":"前端基础","tags":["Web开发","HTML","CSS"],"cover":"/assets/images/HTML与CSS快速入门.jpg","order":"2","icon":"code","excerpt":"这篇文章是关于HTML和CSS的快速入门指南，涵盖了基础知识、标签使用、样式设置以及路径的概念。","description":"重要 本篇文章总结于B站黑马课程”Javaweb企业开发全流程“，用于个人知识点归纳。 参考资料 什么是HTML、CSS？ HTML 提示 HTML(HyperText Markup Language)：超文本标记语言。 超文本：超越了文本的限制，比普通文本更强大。除了文字信息，还可以定义图片、音频、视频等内容。 标记语言：由标签构成的语言 HTML标...","head":[["meta",{"property":"og:url","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/technology/frontend-dev/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF/HTML%E4%B8%8ECSS%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:site_name","content":"哒哒的花园"}],["meta",{"property":"og:title","content":"HTML与CSS快速入门"}],["meta",{"property":"og:description","content":"重要 本篇文章总结于B站黑马课程”Javaweb企业开发全流程“，用于个人知识点归纳。 参考资料 什么是HTML、CSS？ HTML 提示 HTML(HyperText Markup Language)：超文本标记语言。 超文本：超越了文本的限制，比普通文本更强大。除了文字信息，还可以定义图片、音频、视频等内容。 标记语言：由标签构成的语言 HTML标..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/HTML与CSS快速入门.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-31T10:46:15.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/HTML与CSS快速入门.jpg"}],["meta",{"name":"twitter:image:alt","content":"HTML与CSS快速入门"}],["meta",{"property":"article:author","content":"哒哒溜"}],["meta",{"property":"article:tag","content":"Web开发"}],["meta",{"property":"article:tag","content":"HTML"}],["meta",{"property":"article:tag","content":"CSS"}],["meta",{"property":"article:published_time","content":"2024-07-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-31T10:46:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTML与CSS快速入门\\",\\"image\\":[\\"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/HTML与CSS快速入门.jpg\\"],\\"datePublished\\":\\"2024-07-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-31T10:46:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哒哒溜\\",\\"url\\":\\"https://github.com/matike16\\"}]}"]]},"headers":[{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]},{"level":2,"title":"什么是HTML、CSS？","slug":"什么是html、css","link":"#什么是html、css","children":[{"level":3,"title":"HTML","slug":"html","link":"#html","children":[]},{"level":3,"title":"CSS","slug":"css","link":"#css","children":[]}]},{"level":2,"title":"HTML快速入门","slug":"html快速入门","link":"#html快速入门","children":[{"level":3,"title":"1. 基本标签","slug":"_1-基本标签","link":"#_1-基本标签","children":[]},{"level":3,"title":"2. 结构标签","slug":"_2-结构标签","link":"#_2-结构标签","children":[]},{"level":3,"title":"3. 布局标签","slug":"_3-布局标签","link":"#_3-布局标签","children":[]},{"level":3,"title":"4. 表单标签","slug":"_4-表单标签","link":"#_4-表单标签","children":[]},{"level":3,"title":"5. 特点","slug":"_5-特点","link":"#_5-特点","children":[]}]},{"level":2,"title":"绝对路径与相对路径","slug":"绝对路径与相对路径","link":"#绝对路径与相对路径","children":[{"level":3,"title":"1. 绝对路径的定义与使用","slug":"_1-绝对路径的定义与使用","link":"#_1-绝对路径的定义与使用","children":[]},{"level":3,"title":"2. 相对路径的定义及应用","slug":"_2-相对路径的定义及应用","link":"#_2-相对路径的定义及应用","children":[]}]},{"level":2,"title":"CSS快速入门","slug":"css快速入门","link":"#css快速入门","children":[{"level":3,"title":"1. CSS引入方式","slug":"_1-css引入方式","link":"#_1-css引入方式","children":[]},{"level":3,"title":"2. 颜色表示","slug":"_2-颜色表示","link":"#_2-颜色表示","children":[]},{"level":3,"title":"3. CSS选择器","slug":"_3-css选择器","link":"#_3-css选择器","children":[]}]}],"git":{"createdTime":1722239265000,"updatedTime":1722422775000,"contributors":[{"name":"matike16","email":"lda240820@gmail.com","commits":1}]},"readingTime":{"minutes":7.07,"words":2120},"filePathRelative":"technology/frontend-dev/基础技术/HTML与CSS快速入门.md","localizedDate":"2024年7月29日","autoDesc":true}');export{m as comp,b as data};
